export class DocumentationGenerator {
  static generateAPIDocumentation(): string {
    return `
# üìö DOCUMENTATION API - LOOPNET CLONE

## üîê Authentification

Toutes les routes prot√©g√©es n√©cessitent une authentification via NextAuth.

### Endpoints d'authentification:
- \`POST /api/auth/signin\` - Connexion
- \`POST /api/auth/signup\` - Inscription
- \`GET /api/auth/signout\` - D√©connexion

## üè¢ Propri√©t√©s

### \`GET /api/properties\`
R√©cup√®re la liste des propri√©t√©s avec pagination et filtres.

**Param√®tres de requ√™te:**
- \`page\` (number): Num√©ro de page (d√©faut: 1)
- \`limit\` (number): Nombre d'√©l√©ments par page (d√©faut: 20)
- \`type\` (string): Type de propri√©t√© (office, retail, industrial, etc.)
- \`minPrice\` (number): Prix minimum
- \`maxPrice\` (number): Prix maximum
- \`location\` (string): Localisation

**R√©ponse:**
\`\`\`json
{
  "properties": [...],
  "pagination": {
    "page": 1,
    "limit": 20,
    "total": 150,
    "pages": 8
  }
}
\`\`\`

### \`GET /api/properties/[id]\`
R√©cup√®re une propri√©t√© sp√©cifique.

### \`POST /api/properties\`
Cr√©e une nouvelle propri√©t√© (Admin/Agent uniquement).

## üë• Professionnels

### \`GET /api/professionals\`
R√©cup√®re la liste des professionnels.

### \`GET /api/professionals/[id]\`
R√©cup√®re un professionnel sp√©cifique.

## üì∞ Actualit√©s

### \`GET /api/news\`
R√©cup√®re les actualit√©s immobili√®res.

## ‚≠ê Favoris

### \`GET /api/favorites\`
R√©cup√®re les favoris de l'utilisateur connect√©.

### \`POST /api/favorites\`
Ajoute une propri√©t√© aux favoris.

### \`DELETE /api/favorites/[id]\`
Supprime une propri√©t√© des favoris.

## üîî Notifications

### \`GET /api/notifications\`
R√©cup√®re les notifications de l'utilisateur.

### \`POST /api/notifications/subscribe\`
S'abonne aux notifications push.

### \`GET /api/notifications/vapid-key\`
R√©cup√®re la cl√© publique VAPID (authentification requise).

## üõ°Ô∏è Administration (Admin uniquement)

### \`GET /api/admin/users\`
Gestion des utilisateurs.

### \`GET /api/admin/security\`
Monitoring de s√©curit√©.

### \`POST /api/admin/security-test\`
Lance les tests de s√©curit√©.

## üí≥ Paiements

### \`POST /api/stripe/create-checkout-session\`
Cr√©e une session de paiement Stripe.

### \`POST /api/stripe/webhook\`
Webhook Stripe pour les √©v√©nements de paiement.

## üîç Recherche

### \`GET /api/search/[query]\`
Recherche globale dans les propri√©t√©s et professionnels.

## üìä Analytics

### \`GET /api/dashboard/stats\`
Statistiques du dashboard utilisateur.

### \`GET /api/dashboard/analytics\`
Analytics d√©taill√©es (Premium uniquement).

---

## üöÄ Codes de statut HTTP

- \`200\` - Succ√®s
- \`201\` - Cr√©√© avec succ√®s
- \`400\` - Requ√™te invalide
- \`401\` - Non authentifi√©
- \`403\` - Acc√®s interdit
- \`404\` - Ressource non trouv√©e
- \`429\` - Trop de requ√™tes (rate limiting)
- \`500\` - Erreur serveur

## üîí S√©curit√©

### Rate Limiting
- 60 requ√™tes par minute par IP
- 1000 requ√™tes par heure par IP

### Protection Anti-Bot
- D√©tection des User-Agents suspects
- Validation des headers de navigateur
- Protection CSRF

### Monitoring
- Logs de s√©curit√© en temps r√©el
- Alertes automatiques
- Dashboard admin de monitoring
`
  }

  static generateDeploymentGuide(): string {
    return `
# üöÄ GUIDE DE D√âPLOIEMENT - LOOPNET CLONE

## üìã Pr√©requis

### Variables d'environnement requises:
\`\`\`env
# Base de donn√©es
MONGODB_URI=mongodb://...

# Authentification
NEXTAUTH_URL=https://your-domain.com
NEXTAUTH_SECRET=your-secret-key
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Cloudinary (images)
CLOUDINARY_CLOUD_NAME=your-cloud-name
CLOUDINARY_API_KEY=your-api-key
CLOUDINARY_API_SECRET=your-api-secret

# Stripe (paiements)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_...
STRIPE_SECRET_KEY=sk_...
STRIPE_WEBHOOK_SECRET=whsec_...

# Analytics
NEXT_PUBLIC_GA_ID=G-...

# Notifications Push (c√¥t√© serveur uniquement)
VAPID_PUBLIC_KEY=your-vapid-public-key
VAPID_PRIVATE_KEY=your-vapid-private-key

# IA
HUGGINGFACE_API_KEY=your-huggingface-key

# Admin
ADMIN_CREATION_SECRET=your-admin-secret

# S√©curit√©
CUSTOM_KEY=your-custom-security-key
ANALYZE=your-analyze-key
\`\`\`

## üîß √âtapes de d√©ploiement

### 1. Pr√©paration
\`\`\`bash
# Cloner le repository
git clone <repository-url>
cd loopnet-clone

# Installer les d√©pendances
npm install

# V√©rifier les variables d'environnement
npm run check-env
\`\`\`

### 2. Base de donn√©es
\`\`\`bash
# Migrer la base de donn√©es
npm run migrate

# Seeder les donn√©es initiales
npm run seed
\`\`\`

### 3. Build et test
\`\`\`bash
# Build de production
npm run build

# Tests de s√©curit√©
npm run security-test

# Tests de performance
npm run test:performance
\`\`\`

### 4. D√©ploiement Vercel
\`\`\`bash
# D√©ployer sur Vercel
vercel --prod

# Ou utiliser le script de d√©ploiement
npm run deploy
\`\`\`

## üîí Configuration de s√©curit√©

### 1. Variables d'environnement
- Toutes les cl√©s sensibles sont c√¥t√© serveur uniquement
- Aucune exposition c√¥t√© client des donn√©es critiques
- Validation et chiffrement des donn√©es sensibles

### 2. Notifications Push
- Cl√©s VAPID g√©r√©es c√¥t√© serveur
- API s√©curis√©e pour r√©cup√©rer les cl√©s publiques
- Authentification requise pour l'acc√®s

### 3. Monitoring
- Logs de s√©curit√© centralis√©s
- Alertes automatiques
- Dashboard de surveillance

## üìä Post-d√©ploiement

### 1. V√©rifications
- [ ] Site accessible en HTTPS
- [ ] Authentification fonctionnelle
- [ ] Paiements Stripe op√©rationnels
- [ ] Notifications push s√©curis√©es
- [ ] Analytics Google configur√©es

### 2. Tests de s√©curit√©
\`\`\`bash
# Test de s√©curit√© complet
npm run security-test

# Audit Lighthouse
npm run audit
\`\`\`

### 3. Monitoring continu
- Dashboard de s√©curit√© accessible
- Logs d'erreur surveill√©s
- M√©triques de performance suivies

## üÜò D√©pannage

### Probl√®mes courants:

**1. Notifications push ne fonctionnent pas**
- V√©rifier les cl√©s VAPID c√¥t√© serveur
- S'assurer que l'API /api/notifications/vapid-key est accessible
- V√©rifier les permissions de notification

**2. Erreurs de s√©curit√©**
- Consulter le dashboard /admin/security
- V√©rifier les logs de s√©curit√©
- Ajuster les r√®gles de protection

## üìû Support

En cas de probl√®me:
1. Consulter les logs Vercel
2. V√©rifier le dashboard de s√©curit√©
3. Contacter l'√©quipe technique
`
  }

  static generateSecurityGuide(): string {
    return `
# üõ°Ô∏è GUIDE DE S√âCURIT√â - LOOPNET CLONE

## üîí Mesures de protection impl√©ment√©es

### 1. Protection des Variables Sensibles
- **Cl√©s c√¥t√© serveur uniquement**: Aucune exposition c√¥t√© client
- **API s√©curis√©es**: Acc√®s contr√¥l√© aux donn√©es sensibles
- **Authentification requise**: V√©rification pour toutes les op√©rations critiques

### 2. Notifications Push S√©curis√©es
- **Cl√©s VAPID serveur**: Stockage s√©curis√© c√¥t√© serveur
- **API d√©di√©e**: Endpoint s√©curis√© pour r√©cup√©rer les cl√©s publiques
- **Validation d'acc√®s**: Authentification requise

### 3. Protection Anti-Scraping
- **Rate Limiting**: 60 req/min, 1000 req/h par IP
- **D√©tection de bots**: User-agents suspects bloqu√©s
- **Validation headers**: V√©rification des headers navigateur
- **Protection CSRF**: Tokens anti-CSRF

### 4. Monitoring et Alertes
- **Logs de s√©curit√©**: √âv√©nements trac√©s
- **Dashboard admin**: Surveillance temps r√©el
- **Alertes automatiques**: Notifications critiques
- **Statistiques**: M√©triques de s√©curit√©

## üö® Proc√©dures d'urgence

### En cas d'attaque d√©tect√©e:

1. **Identification**
   - Consulter le dashboard de s√©curit√©
   - Analyser les logs d'√©v√©nements
   - Identifier l'IP source

2. **Blocage imm√©diat**
   \`\`\`bash
   # Bloquer une IP via l'API admin
   curl -X POST /api/admin/security \\
     -H "Content-Type: application/json" \\
     -d '{"action": "block_ip", "ip": "192.168.1.100"}'
   \`\`\`

3. **Analyse approfondie**
   - Examiner les patterns d'attaque
   - V√©rifier l'int√©grit√© des donn√©es
   - Documenter l'incident

## üîç Tests de s√©curit√© r√©guliers

### Tests automatis√©s:
\`\`\`bash
# Lancer les tests de s√©curit√©
npm run security-test

# Audit de s√©curit√© complet
npm run audit:security
\`\`\`

### V√©rifications manuelles:
- [ ] Exposition des variables sensibles
- [ ] S√©curit√© des APIs
- [ ] Protection des notifications
- [ ] Int√©grit√© des donn√©es

## üìä M√©triques de s√©curit√©

### KPIs √† surveiller:
- Nombre d'attaques bloqu√©es/jour
- Tentatives d'acc√®s non autoris√©es
- Temps de r√©ponse aux incidents
- Score de s√©curit√© global

## üîß Maintenance de s√©curit√©

### T√¢ches mensuelles:
- [ ] Audit des variables d'environnement
- [ ] V√©rification des permissions API
- [ ] Tests de p√©n√©tration
- [ ] Mise √† jour documentation

### T√¢ches trimestrielles:
- [ ] Audit de s√©curit√© complet
- [ ] R√©vision des politiques
- [ ] Formation √©quipe s√©curit√©
- [ ] Mise √† jour des proc√©dures

---

‚ö†Ô∏è **IMPORTANT**: Toutes les variables sensibles doivent rester c√¥t√© serveur uniquement.
`
  }
}
