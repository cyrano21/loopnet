console.log('=== TEST DE CONNEXION MONGODB ===');

// Charger les variables d'environnement
require('dotenv').config({ path: require('path').resolve(__dirname, '../.env') });

const MONGODB_URI = process.env.MONGODB_URI;

if (!MONGODB_URI) {
  console.error('‚ùå Erreur: MONGODB_URI non d√©fini dans le fichier .env');
  console.log('Variables d\'environnement disponibles:', Object.keys(process.env).join(', '));
  process.exit(1);
}

console.log('‚úÖ MONGODB_URI trouv√©');
console.log('Tentative de connexion √† MongoDB...');

const { MongoClient } = require('mongodb');

async function testConnection() {
  const client = new MongoClient(MONGODB_URI);
  
  try {
    console.log('Connexion √† la base de donn√©es...');
    await client.connect();
    console.log('‚úÖ Connect√© avec succ√®s √† MongoDB');
    
    // Tester la connexion en listant les bases de donn√©es
    const adminDb = client.db().admin();
    const dbs = await adminDb.listDatabases();
    
    console.log('üìã Bases de donn√©es disponibles:');
    dbs.databases.forEach(db => {
      console.log(`- ${db.name} (taille: ${(db.sizeOnDisk / 1024 / 1024).toFixed(2)} Mo)`);
    });
    
    // V√©rifier si la base de donn√©es Loopnet existe
    const dbName = MONGODB_URI.split('/').pop().split('?')[0];
    const dbExists = dbs.databases.some(db => db.name === dbName);
    
    if (dbExists) {
      console.log(`‚úÖ Base de donn√©es "${dbName}" trouv√©e`);
      
      // Lister les collections
      const db = client.db(dbName);
      const collections = await db.listCollections().toArray();
      
      console.log('\nüìã Collections disponibles:');
      collections.forEach((collection, index) => {
        console.log(`${index + 1}. ${collection.name}`);
      });
      
      // Compter les documents dans la collection properties
      if (collections.some(c => c.name === 'properties')) {
        const count = await db.collection('properties').countDocuments();
        console.log(`\n‚ÑπÔ∏è  Nombre de propri√©t√©s dans la collection: ${count}`);
      }
    } else {
      console.log(`‚ö†Ô∏è  Base de donn√©es "${dbName}" non trouv√©e`);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la connexion √† MongoDB:', error.message);
  } finally {
    await client.close();
    console.log('\nüîå D√©connect√© de MongoDB');
  }
}

// Ex√©cuter le test
testConnection().catch(console.error);
